#version 450

out vec4 outColor;

in vec4 vNormal;
in vec4 vPos;

layout(location = 1)uniform mat4 view;

void main()
{
	vec4 lDir = normalize(vec4(-1,-1,-1,0));
	vec4 camPos = inverse(view)[3];
	float specPower = 8.0f;

	vec4 la = vec4(0,0.4f,0.4f,1),
	     ld = vec4(1,1,1,1),
             ls = vec4(1,1,1,1);
	vec4 sa = vec4(.4f,.4f,.4f,.1f),
	     sd = vec4(.2f,.2f,.2f,1.f),
	     ss = vec4(1,0,0,1);

	vec4 R = reflect(lDir,vNormal); //direction the light reflects
	vec4 E = normalize(camPos - vPos); //eye direction


	float lamb = max(0.0f, -dot(vNormal,lDir));

	float spec = pow(min(0.0f, -dot(R,E)),specPower);
	
	vec4 ambient  = la * sa;
	vec4 diffuse  = ld * lamb * sd;
	vec4 specular = ls * spec * ss;

	outColor = ambient + diffuse + specular;
}